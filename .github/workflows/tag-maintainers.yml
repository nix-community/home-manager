name: Tag Module Maintainers
on:
  pull_request_target:
    types: [opened, ready_for_review, reopened, synchronize]
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.run_id }}
  cancel-in-progress: true
permissions:
  contents: read
  pull-requests: write
jobs:
  tag-maintainers:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.draft == false &&
      github.event.pull_request.state == 'open'
    steps:
      - name: Create GitHub App token
        uses: actions/create-github-app-token@v2
        if: vars.CI_APP_ID
        id: app-token
        with:
          app-id: ${{ vars.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
      - name: Get Nixpkgs revision from flake.lock
        id: get-nixpkgs
        run: |
          echo "rev=$(jq -r '.nodes.nixpkgs.locked.rev' flake.lock)" >> "$GITHUB_OUTPUT"
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/${{ steps.get-nixpkgs.outputs.rev }}.tar.gz
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Get changed files
        id: changed-files
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}
        run: |
          CHANGED_FILES=$(gh pr diff ${{ github.event.pull_request.number }} --name-only | grep '^modules/' | grep -v '^modules/\(po\|.*\/news\)/' || true)
          echo "Changed module files:"
          echo "$CHANGED_FILES"
          echo "module_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Extract Maintainers
        id: extract-maintainers
        run: |
          echo "Extracting maintainers from changed files..."
          MAINTAINERS=$(lib/python/extract-maintainers.py \
            --changed-files "${{ steps.changed-files.outputs.module_files }}" \
            --pr-author "${{ github.event.pull_request.user.login }}")
          echo "maintainers=$MAINTAINERS" >> $GITHUB_OUTPUT
          echo "Found maintainers: $MAINTAINERS"
      - name: Manage Reviewers
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}
        run: |
          # Handle case where no module files changed
          if [[ '${{ steps.changed-files.outputs.module_files }}' == '' ]]; then
            echo "No module files changed, managing reviewers accordingly..."
            lib/python/manage-reviewers.py \
              --owner "${{ github.repository_owner }}" \
              --repo "${{ github.event.repository.name }}" \
              --pr-number "${{ github.event.pull_request.number }}" \
              --pr-author "${{ github.event.pull_request.user.login }}" \
              --no-module-files
            exit 0
          fi

          # Handle case where module files changed
          MAINTAINERS="${{ steps.extract-maintainers.outputs.maintainers }}"
          if [[ -n "$MAINTAINERS" ]]; then
            echo "Managing reviewers for maintainers: $MAINTAINERS"
            lib/python/manage-reviewers.py \
              --owner "${{ github.repository_owner }}" \
              --repo "${{ github.event.repository.name }}" \
              --pr-number "${{ github.event.pull_request.number }}" \
              --pr-author "${{ github.event.pull_request.user.login }}" \
              --current-maintainers "$MAINTAINERS"
          else
            echo "No module maintainers found for the modified files."
          fi
